{"componentChunkName":"component---src-templates-blog-post-js","path":"/00010-week-8-100-days-of-flutter/","result":{"data":{"site":{"siteMetadata":{"title":"erluxman","author":"Laxman Bhattarai"}},"markdownRemark":{"id":"7cda2361-369c-5bdb-847c-2c31b8c0b196","html":"<h2 id=\"day-50-use-a-is-a-instead-of-a-is-a\"><a href=\"#day-50-use-a-is-a-instead-of-a-is-a\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day 50 Use <code class=\"language-text\">a is! A</code> instead of <code class=\"language-text\">!(a is A)</code></h2>\n<p>Flutter has special keyword to check if an instance <strong><em><code class=\"language-text\">is not a type</code></em></strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var name = &quot;Hello World&quot;;\n\n// ‚úÖ‚úÖRight way‚úÖ‚úÖ\nassert(name is String);\n\n//‚ùå‚ùåWrong way‚ùå‚ùå\nassert(!(name is int));\n\n// ‚úÖ‚úÖRight way‚úÖ‚úÖ\nassert( name is! int); </code></pre></div>\n<h2 id=\"day51-named-constructor\"><a href=\"#day51-named-constructor\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day51 Named constructor</h2>\n<p>Have you been using static methods to initialze Objects with name?</p>\n<p>Use named constructor :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Color {\n    Color({this.r, this.b, this.g});\n    int r = 0, g = 0, b = 0;\n\n    // ‚ùå static method\n    static Color red() =&gt; Color(r: 255,g: 0,b:255);                                      \n    // ‚úÖ named constructor\n    Color.red() {\n        r = 255;\n    }\n\n    // ‚ùå static method\n    static Color cyan() =&gt; Color(r:0, b: 128, g: 128);\n    // ‚úÖ named constructor\n    Color.cyan(): g = 128, b = 128;\n    // ‚úÖ named constructor\n    Color.cyan() {\n        g = 128;\n        b = 128;\n    }\n}</code></pre></div>\n<h2 id=\"day52-imports-on-steroids-\"><a href=\"#day52-imports-on-steroids-\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day52 Imports on Steroids üíâüíâ</h2>\n<p><strong><em><code class=\"language-text\">as :</code></em></strong> If we import two or more libraries that have conflicting identifiers, we can use them with <code class=\"language-text\">prefix.</code> given after <code class=\"language-text\">as</code> keyword.</p>\n<p><code class=\"language-text\">import &#39;package:library.dart&#39; as lib;</code></p>\n<p><strong><em><code class=\"language-text\">show :</code></em></strong> Show only certain class and hide everything else from it.</p>\n<p><code class=\"language-text\">import &#39;dart:math&#39; show max,tan;</code></p>\n<p><strong><em><code class=\"language-text\">hide :</code></em></strong> Hide only certain class &#x26; show everything else from it.</p>\n<p><code class=\"language-text\">import &#39;dart:core&#39; hide String;</code></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/52importonsteroid.png\" alt=\"importsonsteroid\"></p>\n<h2 id=\"day53-final-vs-const\"><a href=\"#day53-final-vs-const\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day53 final vs const</h2>\n<p><code class=\"language-text\">final and const</code> in dart are confusing to the level we think both of them are same. Let‚Äôs see their diffrences</p>\n<table>\n<thead>\n<tr>\n<th><strong><em><code class=\"language-text\">final</code></em></strong> (global / static / member variables)</th>\n<th><strong><em><code class=\"language-text\">const</code></em></strong> (static / global variables)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Has single value of a <code class=\"language-text\">member or static or global variable</code> from start to end.</td>\n<td>Has single value of a <code class=\"language-text\">static or global variable</code> from start to end.</td>\n</tr>\n<tr>\n<td>Different objects of same type can have different final values in same member varaible.</td>\n<td>Different objects of same type cannot have different const values in same varaible. (i.e. <code class=\"language-text\">const members should be static</code>)</td>\n</tr>\n<tr>\n<td>Should be initialzed <code class=\"language-text\">before constructor is called</code>.</td>\n<td>Should be <code class=\"language-text\">strictly initialized during declaration</code>.</td>\n</tr>\n<tr>\n<td>Only the <code class=\"language-text\">final</code> declared <code class=\"language-text\">member/staic/global variable</code> objects are immutable, their content variables may not. i.e. variables inside final objects can be udpated / reassigned if they are not final themselves.</td>\n<td>All <code class=\"language-text\">const</code> declared <code class=\"language-text\">Golbal/static</code> variable objects including all their internal content varibales are immutable and cannot be changed.</td>\n</tr>\n<tr>\n<td>Can be <code class=\"language-text\">intialized</code> with <code class=\"language-text\">immutable/ mutable / calculated values</code> determined at  <code class=\"language-text\">compile time or runtime</code>.</td>\n<td>Can be <code class=\"language-text\">initialized</code>  with <code class=\"language-text\">only immutable values</code> with all their immutable internal varaibles, determined at <code class=\"language-text\">compile time</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>We can take example of various computers and how they can be compared with dart modifiers.\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/53finalvsconstant.png\" alt=\"final vs constant\"></p>\n<h2 id=\"day54-futurebuilder\"><a href=\"#day54-futurebuilder\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day54 FutureBuilder</h2>\n<p>If you want to display data from API backend or any async source, use FutureBuilder.</p>\n<p>FutureBuilder will automatically give you Widget with default  value until the data arrives from API/ async Source.</p>\n<p>As soon as the real data arrives, it will rebuild the Widget with actual data.</p>\n<p>Just provide the async function / source that will return the values asynchronously along with initial(default) data.</p>\n<p>It works very similar to <code class=\"language-text\">StreamBuilder</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    //Future Builder\n    FutureBuilder&lt;List&lt;Player&gt;&gt;(\n        initialData: [],\n        future: FakePlayersAPI().getPlayers(),\n        builder: (context, snapshot) {\n            if (snapshot.data.isEmpty) return CircularProgressIndicator()\n            else return PlayersListWidget(snapshot.data)\n        }\n    )\n\n    //Fake Backed API.\n    class FakePlayersAPI {\n        Future&lt;List&lt;Player&gt;&gt; getPlayers() async {\n            await Future.delayed(Duration(seconds: 1));\n            return _players;\n        }\n\n        Future&lt;String&gt; getPlayerStory() async {\n            await Future.delayed(Duration(seconds: 1));\n            return playerStoryText;\n        }\n    }</code></pre></div>\n<p><a href=\"https://codepen.io/erluxman/pen/PoPrgbR\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try on codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/54futurebuilder.gif\" alt=\"future builder\"></p>\n<h2 id=\"day55-get-the-easy-navigation-library\"><a href=\"#day55-get-the-easy-navigation-library\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day55 <code class=\"language-text\">Get</code> the easy Navigation library</h2>\n<p>Bored of writing <code class=\"language-text\">PageRoute</code>,<code class=\"language-text\">context</code> and <code class=\"language-text\">builder</code> without actual use of them just to navigate to different Widget? Use <code class=\"language-text\">get: ^version</code> library.</p>\n<p>Also this gives us superpower to <code class=\"language-text\">navigate/show dialog/ BottomSheet/ Snackbar</code> without<code class=\"language-text\">BuildContext</code>, there might be cool patterns to be developed with this freedom.</p>\n<ol>\n<li>Just Replace your MaterialApp with <code class=\"language-text\">GetMaterialApp</code>.</li>\n<li>\n<p>Start navigating like this :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Go to next screen\nGet.to(NextScreen());\n\n//Show dialog\nGet.dialog(MyDialogWidget());\n\n//Show bottom sheet\nGet.bottomSheet(MyButtomSheetWidget)\n\n//Show snackbar \nGet.snackbar(title, subTitle);</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://pub.dev/packages/get\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">visit library</a></p>\n<p><a href=\"https://gist.github.com/erluxman/2d1723e3395325fb5511809f6f95e21b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">demo</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/55getlib.gif\" alt=\"getlib\"></p>\n<h2 id=\"day56-pub-outdated\"><a href=\"#day56-pub-outdated\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day56 <code class=\"language-text\">pub outdated</code></h2>\n<p>Maintaining latest versions of pub dependencies is pain. Even worse, every latest versions are compatible.</p>\n<p>From dart 2.8 onwards, the command <code class=\"language-text\">pub outdated</code> gives you the overview of your dependencies and possible upgrades in <strong><em><strong><code class=\"language-text\">Resolvable column</code></strong></em></strong>.</p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/56outdated.png\" alt=\"outdated\"></p>\n<p>üö®üö®Tip: use <code class=\"language-text\">flutter pub outdated</code> if <code class=\"language-text\">pub outdated</code> can‚Äôt find Flutter SDK.</p>","timeToRead":4,"frontmatter":{"title":"Flutter Tips 50-56","date":"May 31, 2020","spoiler":"8th batch of 7 tips and tricks on the series 100DaysOfFlutter.","cta":null},"fields":{"slug":"/00010-week-8-100-days-of-flutter/","langKey":"en"}}},"pageContext":{"slug":"/00010-week-8-100-days-of-flutter/","previous":{"fields":{"slug":"/00009-week-7-100-days-of-flutter/","langKey":"en","directoryName":"00009-week-7-100-days-of-flutter"},"frontmatter":{"title":"Flutter Tips 43-49"}},"next":{"fields":{"slug":"/00011-week-9-100days-of-flutter/","langKey":"en","directoryName":"00011-week-9-100days-of-flutter"},"frontmatter":{"title":"Flutter Tips 57-63"}},"translations":[],"translatedLinks":[]}}}