{"componentChunkName":"component---src-templates-blog-post-js","path":"/00005-week-3-100-days-of-flutter/","result":{"data":{"site":{"siteMetadata":{"title":"erluxman","author":"Laxman Bhattarai"}},"markdownRemark":{"id":"d045fae6-5f8b-5c3e-b9ce-ea0f19d9589b","html":"<h2 id=\"day15-flexible-vs-expanded\"><a href=\"#day15-flexible-vs-expanded\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day15 Flexible vs Expanded</h2>\n<p>Expanded() is nothing more than Flexible() with</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Flexible (fit: FlexFit.tight) = Expanded()</code></pre></div>\n<p>but, Flexible uses <code class=\"language-text\">fit :FlexFit.loose</code> by default.</p>\n<p><strong>FlexFit.tight</strong> = Wants to fit tight into parent taking as much space as possible.</p>\n<p><strong>FlexFit.loose</strong> = Wants to fit loose into parent taking as little space as possible for itself.</p>\n<p><strong>flex</strong> = The factor of space taken from parent. Mostly not fully used if <code class=\"language-text\">flex: FlexFit.loose</code> used i.e. <code class=\"language-text\">Flexible</code>.</p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/15flexibleexpanded.png\" alt=\"flex\"></p>\n<p>If you fully read the following image, you will fully understand the difference between <code class=\"language-text\">Flexible</code> and <code class=\"language-text\">Expanded</code>\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/15expandedvsflexible.png\" alt=\"expanded\"></p>\n<p><a href=\"https://codepen.io/erluxman/pen/JjYKZGG\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try in codepen</a></p>\n<h2 id=\"day16-bulk-declaration\"><a href=\"#day16-bulk-declaration\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day16 Bulk declaration</h2>\n<p>If you have been declaring each member separately all the time, you can declare members of same types at once.</p>\n<p>I wouldn’t declare <code class=\"language-text\">age</code> and <code class=\"language-text\">shoeSize</code> at once because they are not related.</p>\n<p>With great power comes great responsibility, Use this wisely.\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/16singlelinedeclartion.png\" alt=\"singleline\"></p>\n<h2 id=\"day17-sliverappbar--collapsable-appbar--parallaxheader\"><a href=\"#day17-sliverappbar--collapsable-appbar--parallaxheader\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day17 SliverAppBar / Collapsable AppBar / ParallaxHeader</h2>\n<p>Remember CollapsableAppBar (android) / ParallaxHeader (ios)? We have SliverAppBar in Flutter to do exactly that.</p>\n<p>To use it, you will have to have a CustomScrollView as parent.</p>\n<p>then you add two slivers of it.</p>\n<ol>\n<li>SliverAppBar</li>\n<li>SliverFillRemaining</li>\n</ol>\n<p>You can play with values of snap, floating, pinned etc to get desired effect</p>\n<p><a href=\"https://dartpad.dartlang.org/6874032a7a1ea129640b8f617f7ffed3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try on dartpad</a></p>\n<p><a href=\"https://api.flutter.dev/flutter/material/SliverAppBar-class.html#snippet-container\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">see various types of SliverAppBars here</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/17sliverappbars.gif\" alt=\"sliverappbar\"></p>\n<h2 id=\"day18-what-the-key\"><a href=\"#day18-what-the-key\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day18 What the Key</h2>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/18keys.gif\" alt=\"keys\"></p>\n<p>Ever wondered why we need GlobalKey(children : GlobalObjectKey, LabeledGlobalKey), LocalKey(children: ObjectKey, ValueKey &#x26; UniqueKey) right?</p>\n<p>They are used to access or restore state In a statefulWidget (Mostly we don’t need them at all if our widget tree is all Stateless Widgets).</p>\n<h3 id=\"purpose-key-to-use-inside-bracket\"><a href=\"#purpose-key-to-use-inside-bracket\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Purpose (Key to use inside bracket)</h3>\n<ul>\n<li>Mutate the collection i.e. remove / add / reorder item to list in stateful widget like draggable todo list where checked items get removed (ObjectKey, ValueKey &#x26; UniqueKey)</li>\n<li>Move widget from one Parent to another preserving it’s state. (GlobalKey)</li>\n<li>Display same Widget in multiple screens and holding its state.(GlobalKey)</li>\n<li>Validate Form.(GlobalKey)</li>\n<li>You can to give a key without using any data. (UniqueKey)</li>\n<li>If you can use certain field of data like UUID of users as unique Key. (ValueKey)</li>\n<li>If you do not have any unique field to use as key but object itself is unique. (ObjectKey)</li>\n<li>If you have multiple Forms or Multiple Widgets of same type that need GlobalKey. (GlobalObjectKey, LabeledGlobalKey whichever is appropriate , similar logic to ValueKey and ObjectKey)</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=kn0EOS-ZiIc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Learn more on this video</a></p>\n<h2 id=\"day19-amazing-library-timedart\"><a href=\"#day19-amazing-library-timedart\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day19 Amazing Library Time.dart</h2>\n<p>If you are tired to long and verbose DateTime and Duration calculation <code class=\"language-text\">Time.dart</code> comes to your rescue.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Before\nvar 3dayLater = DateTime.now().add(Duration(days: 3)).day;\n\n//After\nvar 3dayLater = 3.days.fromNow.day;\n\n\n//Before\nvar duration = Duration(minutes: 10) +Duration(seconds: 15) -\n    Duration(minutes: 3) +Duration(hours: 2);\n\n//After\nvar duration = 10.minutes + 15.seconds - 3.minutes + 2.hours;\n\n//Before\nawait  Future.delayed(Duration(seconds: 2))\n\n//After\nawait 2.seconds.delay</code></pre></div>\n<p><a href=\"https://github.com/jogboms/time.dart\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">visit time.dart</a></p>\n<h2 id=\"day20-testing-errors\"><a href=\"#day20-testing-errors\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day20 Testing errors</h2>\n<p>You can simply test if two values are equal in dart with <code class=\"language-text\">expect(actual, expected)</code></p>\n<p>But if you want to test errors use the <code class=\"language-text\">function closure</code> that throws error as actual and check with <code class=\"language-text\">throwsA&lt;ErrorType&gt;</code> as expected.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  void main() {\n    group(&quot;Exception/Error testing&quot;, () {\n      test(&quot;test method that throws errors&quot;, () {\n        expect(_testError(fails: false), false);\n        expect(() =&gt; _testError(fails: true), throwsA(isA&lt;FooError&gt;()));\n      });\n    });\n  }\n\n  bool _testError({bool fails}) {\n    if(fails)throw FooError();\n    return fails;\n  }\n\n  class FooError extends Error {}</code></pre></div>\n<h2 id=\"day21-concisely-add-collection-into-collection-with-spread-operator\"><a href=\"#day21-concisely-add-collection-into-collection-with-spread-operator\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day21 Concisely add collection into collection with <code class=\"language-text\">Spread(...)</code> operator</h2>\n<p>We normally use addAll() on collection to add one collection to another.</p>\n<p>But From dart 2.3 and above, we can use Spread Operator (<code class=\"language-text\">...</code>) to add collection inside collection.</p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/21nullsafecollectioninsert.png\" alt=\"nullsfae\"></p>\n<p><a href=\"https://dartpad.dev/98c2ab9d41fb2c20cc67c94956972721\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try in dartpad</a></p>","timeToRead":4,"frontmatter":{"title":"Flutter Tips 15-21","date":"April 25, 2020","spoiler":"Third batch of 7 tips and tricks on the series 100DaysOfFlutter.","cta":null},"fields":{"slug":"/00005-week-3-100-days-of-flutter/","langKey":"en"}}},"pageContext":{"slug":"/00005-week-3-100-days-of-flutter/","previous":{"fields":{"slug":"/00004-week-2-100days-of-flutter/","langKey":"en","directoryName":"00004-week-2-100days-of-flutter"},"frontmatter":{"title":"Flutter Tips 8-14"}},"next":{"fields":{"slug":"/00006-week-4-100-days-of-flutter/","langKey":"en","directoryName":"00006-week-4-100-days-of-flutter"},"frontmatter":{"title":"Flutter Tips 22-28"}},"translations":[],"translatedLinks":[]}}}