{"componentChunkName":"component---src-templates-blog-post-js","path":"/hu/why-do-we-write-super-props/","result":{"data":{"site":{"siteMetadata":{"title":"Overreacted","author":"Dan Abramov"}},"markdownRemark":{"id":"5af6d688-15a5-56bb-b97b-9707c462033a","html":"<p>Tudom, hogy mostan√°ban a <a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hookok</a> vannak k√∂z√©ppontban, √©ppen ez√©rt ir√≥nikus, hogy <em>class</em>  komponensekkel kapcsolatos t√©nyekkel kezdem el ezt a blogot. √âs akkor mi van?!</p>\n<p><strong>Ezek a ‚Äòjaj, m√°r √©rtem!‚Äô pillanatok <em>nem</em> fontosak a React haszn√°lat√°t illlet≈ëen, de mindenk√©ppen sz√≥rakoztat√≥ak, ha szeretsz elmer√ºlni a dolgok m≈±k√∂d√©s√©ben.</strong></p>\n<p>√çme az els≈ë.</p>\n<hr>\n<p>T√∂bbsz√∂r √≠rtam m√°r le a <code class=\"language-text\">super(props)</code>-ot √©letemben, mint, hogy azt tudni akarn√°d:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Checkbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Term√©szetesen a <a href=\"https://github.com/tc39/proposal-class-fields\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">class-okat √©rint≈ë, tervezett √∫j√≠t√°sok</a> megsp√≥rolj√°k nek√ºnk a vesz≈ëd√©st:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Checkbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Az ilyen t√≠pus√∫ szintaxist akkor <a href=\"https://reactjs.org/blog/2015/01/27/react-v0.13.0-beta-1.html#es7-property-initializers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tervezt√©k</a>, amikor a React 0.13 megkapta a class-ok t√°mogat√°s√°t, m√©g 2015-ben. A <code class=\"language-text\">konstruktorok</code> defini√°l√°sa √©s a <code class=\"language-text\">super(props)</code> h√≠v√°sa mindig is ideiglenes megold√°snak sz√°m√≠tott, eg√©szen addig, am√≠g a class alap√∫ mez≈ëk egy k√©nyelmes alternat√≠v√°t nem ny√∫jtottak.</p>\n<p>T√©rj√ºnk vissza ugyanerre a p√©ld√°ra, csak m√°r ES2015-√∂s √∫jdons√°gokkal:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Checkbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Mi√©rt h√≠vjuk meg a <code class=\"language-text\">super</code> f√∂ggv√©nyt? Megtehetj√ºk, hogy <em>nem</em> h√≠vjuk meg? Ha musz√°j megh√≠vnunk, akkor mi t√∂rt√©nik, amikor nem adunk √°t neki <code class=\"language-text\">props</code> √©rt√©ket? L√©tezik m√°s argumentuma?</strong> Der√≠ts√ºk ki!</p>\n<hr>\n<p>JavaScript-ben a <code class=\"language-text\">super</code> f√ºggv√©ny a sz√ºl≈ë oszt√°ly konstruktor√°ra utal. (A p√©ld√°nkban, a <code class=\"language-text\">React.Component</code>-ben tal√°lhat√≥ra mutat.)</p>\n<p>M√©g fontosabb tudni, hogy nem haszn√°lhatjuk a <code class=\"language-text\">this</code> hivatkoz√°st egy konstruktorban,am√≠g a sz√ºl≈ë konstruktor√°nak h√≠v√°sa meg nem t√∂rt√©nt. A JavaScript egyszer≈±en nem fogja engedni:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Checkbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// üî¥ Can‚Äôt use `this` yet</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ‚úÖ Now it‚Äôs okay though</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>J√≥ oka van a JavaScript-nek, hogy ha er≈ëszakkal is, de lefuttatja vel√ºnk a sz√ºl≈ë oszt√°ly konstruktor√°t miel≈ëtt hozz√°f√©r√ºnk a <code class=\"language-text\">this</code> hivatkoz√°shoz. Gondoljuk csak v√©gig a class fel√©p√≠t√©s√©t:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PolitePerson</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">greetColleagues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// üî¥ This is disallowed, read below why</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">greetColleagues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Good morning folks!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>K√©pzelj√ºk el, hogy elkezdj√ºk haszn√°lni a <code class=\"language-text\">this</code>-t miel≈ëtt <em>megh√≠vn√°nk</em> a super f√ºggv√©nyt. Egy h√≥nappal k√©s≈ëbb mondjuk megv√°ltoztatjuk a <code class=\"language-text\">greetColleagues</code> f√ºggv√©nyt, hogy az √°ltala ki√≠rt √ºzenet tartalmazza a szem√©ly nev√©t:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token function\">greetColleagues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Good morning folks!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">', nice to meet you!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>De tegy√ºk fel, hogy elfelejtj√ºk, hogy a <code class=\"language-text\">this.greetColleagues()</code> f√ºggv√©ny el≈ëbb megh√≠v√≥dik, miel≈ëtt a <code class=\"language-text\">super()</code> f√ºggv√©ny be tudn√° √°ll√≠tani a <code class=\"language-text\">this.name</code> v√°ltoz√≥t. Ebben az esetben a <code class=\"language-text\">this.name</code> m√©g csak nem is lett defini√°lva. Ahogyan azt l√°thatjuk is, nagyon neh√©z ilyen t√≠pus√∫ k√≥ddal tervezni √©s gondolkodni.</p>\n<p>Hogy elker√ºlj√ºk az ilyen buktat√≥kat, a <strong>JavaScript k√©nyszer√≠t minket, hogy ha a <code class=\"language-text\">this</code> hivatkoz√°st szeretn√©nk haszn√°lni, akkor el≈ëtte el≈ësz≈ër a <code class=\"language-text\">super</code> met√≥dust <em>kell</em> megh√≠vnunk.</strong> Engedj√ºk a sz√ºl≈ëket, hogy tegy√©k a dolgukat! Ez a korl√°toz√°s a React komponensek meghat√°roz√°s√°ra is √©rv√©nyes:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ‚úÖ Okay to use `this` now</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Egy k√©rd√©s maradt h√°tra: mi√©rt kell √°tadnunk a <code class=\"language-text\">props</code> argumentumot?</p>\n<hr>\n<p>Azt hihetn√©d, hogy az√©rt sz√ºks√©ges, mert <code class=\"language-text\">props</code> √°tad√°s√°val a <code class=\"language-text\">super</code> f√ºggv√©ny be√°ll√≠tja a <code class=\"language-text\">this.props</code> kezdeti √©rt√©k√©t a <code class=\"language-text\">React.Component</code>-en bel√ºl</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Inside React</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ez nincs is messze az igazs√°gt√≥l - val√≥j√°ban <a href=\"https://github.com/facebook/react/blob/1d25aa5787d4e19704c049c3cfa985d3b5190e0d/packages/react/src/ReactBaseClasses.js#L22\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ezt csin√°lja</a>.</p>\n<p>De, ha megh√≠vjuk a <code class=\"language-text\">super()</code> f√ºggv√©nyt a <code class=\"language-text\">props</code> argumentum n√©lk√ºl, akkor is el fogjuk tudni √©rni a <code class=\"language-text\">this.props</code>-ot a <code class=\"language-text\">render</code> √©s az √∂sszes t√∂bbi f√ºggv√©nyen bel√ºl. (Ha nem hiszel nekem, pr√≥b√°ld ki!)</p>\n<p>Hogyan lehets√©ges <em>ez</em>? Ebb≈ël kider√ºl, hogy a <strong>React hozz√°rendeli a <code class=\"language-text\">props</code> argumentumot a p√©ld√°nyunkhoz, r√∂gt√∂n miut√°n megh√≠vta az adott p√©ld√°ny *konstruktor√°t:</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token comment\">// Inside React</span>\n  <span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">YourComponent</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  instance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Teh√°t, m√©g ha el is felejted a <code class=\"language-text\">props</code>-ot √°tadni a <code class=\"language-text\">super()</code> f√ºggv√©nynek, a React ezt megteszi helyetted. Ennek oka van.</p>\n<p>Amikor a React megkapta a class-ok t√°mogat√°s√°t, akkor nem csak az ES6 oszt√°lyok tulajdons√°g√°t kapta meg. A c√©l az volt, hogy olyan sz√©les k√∂rben fedj√ºk le az egyes oszt√°lyok absztakci√≥kat, amennyire csak lehets√©ges. <a href=\"https://reactjs.org/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nem teljesen volt vil√°gos</a>, hogy mennyire lesz sikeres a ClojureScript-tel, CoffeeScript-tel, ES6-tal, Fable-el, Scala.js-el, TypeScript-tel, vagy m√°s komponens alap√∫ megold√°ssal. M√≠g az ES6-ot igen, addig a React-ot sz√°nd√©kosan tervezt√©k √∫gy, hogy ne f√ºggj√∂n att√≥l, hogy a <code class=\"language-text\">super()</code> f√ºggv√©ny meg lett-e h√≠vva vagy sem.</p>\n<p>Ez azt jelenti, hogy el√©g mostant√≥l <code class=\"language-text\">super()</code> f√ºggv√©nyt h√≠vni a <code class=\"language-text\">super(props)</code> helyett?</p>\n<p><strong>Term√©szetesen nem, mert zavar√≥.</strong> Persze, a React gondoskodna a <code class=\"language-text\">this.props</code> <em>k√©s≈ëbbi</em> hozz√°rendel√©s√©r≈ël, miut√°n a konstruktor megh√≠v√≥dott, de a <code class=\"language-text\">this.props</code> m√©g mindig undefined lenne a <code class=\"language-text\">super</code> f√ºggv√©ny megh√≠v√°sa √©s a konstruktor v√©ge <em>k√∂z√∂tt</em>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Inside React</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Inside your code</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Button</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// üò¨ We forgot to pass props</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// ‚úÖ {}</span>\n<span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// üò¨ undefined </span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sokkal nagyobb kih√≠v√°st jelenthet a hibakeres√©s is, ha ez valamelyik met√≥dusban t√∂rt√©nik, amely a <em>konstruktorb√≥l</em> lett megh√≠vva. <strong>Ez√©rt javaslom, hogy mindig adjuk √°t a super() f√ºggv√©nynek a <code class=\"language-text\">props</code>-t, m√©g ha ez nem is szigor√∫an k√∂telez≈ë:</strong> </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Button</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ‚úÖ We passed props</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// ‚úÖ {}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ‚úÖ {}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ezzel biztosak lehet√ºnk abban, hogy a <code class=\"language-text\">this.props</code> be√°ll√≠t√°sra ker√ºl, m√©g a konstruktor lefut√°sa el≈ëtt.</p>\n<hr>\n<p>Van m√©g egy dolog, amire biztosan k√≠v√°ncsiak a React felhaszn√°l√≥k.</p>\n<p>Biztosan megfigyelted m√°r, hogy, amikor a Context API-t haszn√°lod class-okon bel√ºl (m√©g a r√©gi <code class=\"language-text\">contextTypes</code> √©s az √∫j <code class=\"language-text\">contextType</code> (React 16.6) eset√©ben is), a <code class=\"language-text\">context</code>, mint m√°sodik param√©ter √©rkezik a konstruktorba.</p>\n<p>Mi√©rt is nem √≠rjuk egyszer≈±en, hogy <code class=\"language-text\">super(props, context)</code>? Megtehetn√©nk, de a context nagyon ritk√°n ker√ºl felhaszn√°l√°sra, ez√©rt ez a szitu√°ci√≥ nem mer√ºl fel t√∫l gyakran.</p>\n<p><strong>A class-ok mez≈ëit √©rint≈ë √∫j√≠t√°soknak k√∂sz√∂nhet≈ëen ezek a buktat√≥k teljesen megsz≈±nnek.</strong> L√©tez≈ë konstuktor n√©lk√ºl is minden argumentum automatikusan √°tad√°sra ker√ºl a komponensek sz√°m√°ra. Ennek k√∂sz√∂nhet≈ëen haszn√°lhatjuk a <code class=\"language-text\">state = {}</code> kifejez√©st, hogy hivatkoz√°sokat √°gyazhassunk be a <code class=\"language-text\">this.props</code>-ot √©s a <code class=\"language-text\">this.context</code>-et illet≈ëen, persze csak ha sz√ºks√©ges.</p>\n<p>A Hook-ok eset√©ben egy√°ltal√°n nincs <code class=\"language-text\">super</code> f√ºggv√©ny√ºnk vagy <code class=\"language-text\">this</code> hivatkoz√°sunk, de ez m√°r egy m√°sik t√∂rt√©net, m√°sik alkalomra.</p>","timeToRead":5,"frontmatter":{"title":"Mi√©rt √≠rjuk mindig, hogy super(props)?","date":"November 30, 2018","spoiler":"A v√©g√©n lesz egy csavar.","cta":null},"fields":{"slug":"/hu/why-do-we-write-super-props/","langKey":"hu"}}},"pageContext":{"slug":"/hu/why-do-we-write-super-props/","translations":["cs","de","fr","fa","es","hu","it","ja","my","nb","sr","pl","sk","pt-br","nl","th","uk","vi","tr","zh-hant","zh-hans"],"translatedLinks":[]}}}