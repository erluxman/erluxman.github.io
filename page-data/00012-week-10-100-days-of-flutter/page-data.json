{"componentChunkName":"component---src-templates-blog-post-js","path":"/00012-week-10-100-days-of-flutter/","result":{"data":{"site":{"siteMetadata":{"title":"erluxman","author":"Laxman Bhattarai"}},"markdownRemark":{"id":"8ebf37f5-1564-5977-8989-858c81abc758","html":"<h2 id=\"day64-get_it\"><a href=\"#day64-get_it\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day64 get_it</h2>\n<p><code class=\"language-text\">get_it</code> helps you to access :</p>\n<ul>\n<li>Service objects like <code class=\"language-text\">RESTClient</code>, <code class=\"language-text\">DB</code> &#x26; their <code class=\"language-text\">mocks</code> from anywhere.</li>\n<li><code class=\"language-text\">(View/UI)Model,BLoCs</code> etc. from <code class=\"language-text\">Widgets</code>.</li>\n</ul>\n<p><strong>without <code class=\"language-text\">BuildContext</code>.</strong></p>\n<h3 id=\"to-use-get_it\"><a href=\"#to-use-get_it\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To use <code class=\"language-text\">get_it</code></h3>\n<ol>\n<li>\n<p>Add get_it to dependencies</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies:\nget_it: ^4.0.2</code></pre></div>\n</li>\n<li>\n<p>Provide an object/dependency to get_it</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">void main() {\n    GetIt.I.registerSingleton(Player.messi());\n    runApp(MyApp());\n}</code></pre></div>\n</li>\n<li>\n<p>Get the dependency from anywhere in app with it’s type.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Player currentPlayer = GetIt.I&lt;Player&gt;();\nprint(currentPlayer)  // Player{name: Messi,shirtNumber: 10}</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://pub.dev/packages/get_it#-readme-tab-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">visit get_it</a></p>\n<h2 id=\"day65-setup-linter\"><a href=\"#day65-setup-linter\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day65 Setup Linter</h2>\n<p>Lint helps you to find potential errors, bugs, &#x26; code style inconsistancy etc.</p>\n<p><strong><code class=\"language-text\">To setup lint in Flutter :</code></strong></p>\n<ol>\n<li>\n<p>Add lint in dev dependencies.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dev_dependencies:\n        lint: ^version</code></pre></div>\n</li>\n<li>Add <code class=\"language-text\">analysis_options.yaml</code> in project root directory.\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/65lint.png\" alt=\"lint\"></li>\n<li>\n<p>Include <code class=\"language-text\">package:lint/analysis_options.yaml</code> inside <code class=\"language-text\">analysis_options.yaml</code> and add your custom rules.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">include: package:lint/analysis_options.yaml\n\n        # Custom Rules\n        linter:\n                rules:\n                        sort_constructors_first: true\n                        prefer_single_quotes: true</code></pre></div>\n</li>\n<li>Done.</li>\n</ol>\n<h3 id=\"before-lint\"><a href=\"#before-lint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before Lint</h3>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/65lintbefore.png\" alt=\"Before\"></p>\n<h3 id=\"after-lint\"><a href=\"#after-lint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>After Lint</h3>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/65afterlint.png\" alt=\"Before\"></p>\n<p><a href=\"https://pub.dev/packages/lint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">visit lint package</a></p>\n<h2 id=\"day66-assertbooleanmessageiffalse\"><a href=\"#day66-assertbooleanmessageiffalse\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day66 assert(boolean,messageIfFalse)</h2>\n<p>If some <code class=\"language-text\">conditions</code> <strong><code class=\"language-text\">must not ever occur</code></strong> on program, we use assert to halt the execution.</p>\n<p>Assert condition means that there is no way we can handle exception caused if the condition fails, it must be fixed.</p>\n<p><code class=\"language-text\">assert()</code> statement also help reduce the responsibility of a program as it doesn’t need to handle every edge cases.</p>\n<p><code class=\"language-text\">assert()</code> are ignored in release/production.</p>\n<p>Some examples :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    updateUser(User user){\n            assert(user.id != null) // There is no way to udpate user without id.\n            syncUser(user);\n    }\n\n    int  getRealSquareRoot(int square){\n            assert(square &gt;= 0) //square must be positive to have real root.\n            return sqrt(square);\n    }\n\n    driveCar(Car car){\n            assert(car.hasEngine);\n            assert(car.hasFuel);\n            assert(car.hasWheels);\n            car.drive();\n    }</code></pre></div>\n<h2 id=\"day67-show-build-status-badget-on-readme\"><a href=\"#day67-show-build-status-badget-on-readme\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day67 Show build Status badget on Readme</h2>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/67cibadge.png\" alt=\"badge\"></p>\n<ol>\n<li>\n<p>Create <code class=\"language-text\">.github/workflows/main.yml</code> Inside your project’s root directory. or Run the command in your <strong>terminal / Powershell</strong> :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">md .github/workflows  &amp;&amp; cd &quot;$_&quot; &amp;&amp; touch main.yml</code></pre></div>\n</li>\n<li>Put the steps in <a href=\"https://gist.github.com/erluxman/ac4916fedc3b37982181b0a631561d20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this</a> file inside <code class=\"language-text\">main.yml</code>\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/67mainyml.png\" alt=\"main.yml\"></li>\n<li>\n<p>Add the build badge on your README.md.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[![Dart CI]({YOUR_GITHUB_PROJECT_URL}/workflows/Flutter%20CI/badge.svg)]({YOUR_GITHUB_PROJECT_URL}/actions)</code></pre></div>\n</li>\n<li>Commit to Github.</li>\n</ol>\n<h2 id=\"day68-show-code-coverage-badget-on-readme-codecov\"><a href=\"#day68-show-code-coverage-badget-on-readme-codecov\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day68 Show code coverage badget on Readme <img src=\"https://codecov.io/gh/erluxman/productive/branch/master/graph/badge.svg\" alt=\"codecov\"></h2>\n<ol>\n<li>\n<p>Add the following steps at the end of your Github Actions  main.yml from previous tips.\nFind the full <code class=\"language-text\">main.yml</code> file <a href=\"https://github.com/erluxman/productive/blob/master/.github/workflows/main.yml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a></p>\n<ul>\n<li>uses: codecov/codecov-action@v1.0.2\nif: matrix.os == ‘ubuntu-latest’\nwith:\ntoken: ${{secrets.CODECOV}} #required\nfile: ./coverage/lcov.info #optional </li>\n</ul>\n</li>\n<li>Login/Sign up to <a href=\"https://codecov.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">codecov.io</a></li>\n<li>Go to <a href=\"https://codecov.io/gh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codecov.io/gh</a> > click on your username > search the repo to show codecoverage and select it.\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/68codecov.gif\" alt=\"codecov\"></li>\n<li>After that copy the Uplaod token (which should be staring at you at this point/inside setting tab)</li>\n<li>Go to project’s setting(<strong><code class=\"language-text\">not profile setting</code></strong>), select “Secrets” from left navigation panel, Add new secret\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/68gh.gif\" alt=\"github\"></li>\n<li>\n<p>Add code Coverage badge to your github repo README file.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[![codecov](https://codecov.io/gh/USER_NAME/REPO_NAME/branch/master/graph/badge.svg)](https://codecov.io/gh/USER_NAME/REPO_NAME)</code></pre></div>\n</li>\n<li>Git Push and wait for the build to complete, you will have the badges in your github Repo like this:\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/68result.png\" alt=\"result\"></li>\n</ol>\n<p><a href=\"https://www.youtube.com/watch?v=r4NQNSRWgY8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">See Video</a></p>\n<h2 id=\"day69-factory-constructors\"><a href=\"#day69-factory-constructors\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day69 <code class=\"language-text\">factory</code> constructors</h2>\n<p>Instead of using <code class=\"language-text\">static</code> methods to <code class=\"language-text\">create/return</code> <code class=\"language-text\">new/cached</code> instance of it’s class or it’s sub classi.e. <strong><code class=\"language-text\">factory pattern</code></strong>, we can use <code class=\"language-text\">factory constructors</code>.</p>\n<p><code class=\"language-text\">factory</code> constructors <strong>behave</strong> like <code class=\"language-text\">static methods</code> but <strong>called</strong> like <code class=\"language-text\">normal constructors</code>. Factory constructors can also be be named &#x26; unnamed.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">void main() {\n      //❌ static method ❌ \n      var staticUser = User.getUser(&quot;John Doe&quot;);\n\n      //✅ factory connstructor ✅\n      var factoryUser = User(&quot;John Doe&quot;);\n}\nclass User {\n      User._(this.name);\n      String name;\n      \n      static Map&lt;String, User&gt; users = {};\n\n      //❌ static method ❌ \n      static User getUser(String name) =&gt; users.putIfAbsent(name, () =&gt; User._(name));\n      \n      //✅ factory connstructor ✅\n      factory User(String name) =&gt;  users.putIfAbsent(name, () =&gt; User._(name));\n}</code></pre></div>\n<h2 id=\"day70-animateddefaulttextstyle\"><a href=\"#day70-animateddefaulttextstyle\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day70 <code class=\"language-text\">AnimatedDefaultTextStyle</code></h2>\n<p>We can animate change in TextStyle with <code class=\"language-text\">AnimatedDefaultTextStyle</code>.</p>\n<p>Just give the animation <code class=\"language-text\">duration</code> &#x26; the updated <code class=\"language-text\">TextStyle</code>. <code class=\"language-text\">AnimatedDefaultTextStyle</code> will take care of the rest.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    AnimatedDefaultTextStyle(\n      duration: Duration(milliseconds: 300),\n      child: Text(&quot;Flutter&quot;),\n      style: newStyle,\n    )</code></pre></div>\n<p><a href=\"https://codepen.io/erluxman/pen/XWXKBJP\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try in codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/70textanim.gif\" alt=\"animatedtext\"></p>","timeToRead":4,"frontmatter":{"title":"Flutter Tips 64-70","date":"June 14, 2020","spoiler":"10th batch of 7 tips and tricks on the series 100DaysOfFlutter.","cta":null},"fields":{"slug":"/00012-week-10-100-days-of-flutter/","langKey":"en"}}},"pageContext":{"slug":"/00012-week-10-100-days-of-flutter/","previous":{"fields":{"slug":"/00011-week-9-100days-of-flutter/","langKey":"en","directoryName":"00011-week-9-100days-of-flutter"},"frontmatter":{"title":"Flutter Tips 57-63"}},"next":{"fields":{"slug":"/00013-week-11-100-day-of-flutter/","langKey":"en","directoryName":"00013-week-11-100-day-of-flutter"},"frontmatter":{"title":"Flutter Tips 70-77"}},"translations":[],"translatedLinks":[]}}}