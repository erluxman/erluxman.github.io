{"componentChunkName":"component---src-templates-blog-post-js","path":"/00014-week-12-100-days-of-flutter/","result":{"data":{"site":{"siteMetadata":{"title":"erluxman","author":"Laxman Bhattarai"}},"markdownRemark":{"id":"4907a0d5-ac2f-5af8-9488-b6a1a2347b04","html":"<h2 id=\"day-78-easy-navigation\"><a href=\"#day-78-easy-navigation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Day 78 Easy navigation</h2>\n<p>Have you been navigating to different screen like this?</p>\n<p> ❌ Dont do this anymore ❌</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Navigator.of(this).push(\n      MaterialPageRoute(builder: (context) =&gt; NextScreen()),\n    );</code></pre></div>\n<p> ✅ Do this ✅</p>\n<ol>\n<li>\n<p>Define a simple extension on <code class=\"language-text\">BuildContext</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">extension NavigationExtension on BuildContext {\n  \n  navigateTo(Widget destination) {\n    Navigator.of(this).push(\n      MaterialPageRoute(builder: (context) =&gt; destination),\n    );\n  }\n}</code></pre></div>\n</li>\n<li>\n<p>🎉 Celebrate 🎉 🎉</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">context.navigateTo( NextScreen());\ncontext.navigateTo( SeventhScreen());\ncontext.navigateTo( SettingPage());</code></pre></div>\n</li>\n</ol>\n<h2 id=\"day-79-just-import-every-folders-inside-assets-rather-than-every-files\"><a href=\"#day-79-just-import-every-folders-inside-assets-rather-than-every-files\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day 79 Just import every folders inside assets rather than every files</h2>\n<p><strong>It’s too much of work 😰🥱 to import every assets like image 🏞, json , audio 🎵into <code class=\"language-text\">pubspec.yml</code></strong></p>\n<p><strong>But sadly 😢, you can’t import just the <code class=\"language-text\">assets</code> folder.</strong></p>\n<p><strong>Just import all the folders, it will work 🎉🍾.</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/79assets.png\" alt=\"import\"></p>\n<h2 id=\"day-80-make-a-class-of-resources-like-rstring-rsvgrimages-rflare-etc-instead-of-direct-asset-path\"><a href=\"#day-80-make-a-class-of-resources-like-rstring-rsvgrimages-rflare-etc-instead-of-direct-asset-path\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day 80 Make a class of Resources like R.string, R.svg,R.images, R.flare etc instead of direct asset path</h2>\n<p>Instead of using raw string, path &#x26; URLs, we can organize them in Resource classes.</p>\n<p> <strong><code class=\"language-text\">Group constants, paths and strings by their types</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Strings {\n  String appName = &quot;Productive&quot;;\n  String privacyURL = &quot;https://blabla.com&quot;;\n}\nclass SVGImages { String homeIcon = &quot;assets/images/home.svg&quot;;}\nclass LottieFiles { String paperPlane = &quot;assets/lottie/paper_plane.json&quot;;}    </code></pre></div>\n<p><strong><code class=\"language-text\">Organize all resource into one class</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class R {\n  static Strings strings = Strings();\n  static SVGImages svgImages = SVGImages();\n  static LottieFiles lottieFiles = LottieFiles();\n}</code></pre></div>\n<p><strong><code class=\"language-text\">Use resources instead of raw strings and path</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// ❌ Don&#39;t use raw Strings &amp; Paths ❌\nText(&quot;Productive&quot;),\nImage.asset(&quot;assets/images/home.svg&quot;),\nLottie.asset(&quot;assets/lottie/paper_plane.json&quot;),   \n\n// ✅ Acess String &amp; Pathsfrom Resource ✅\nText(R.strings.appName),\nImage.asset(R.svgImages.homeIcon),\nLottie.asset(R.lottieFiles.paperPlane),</code></pre></div>\n<h2 id=\"day81-use-httpsappquicktypeio-to-generate-serializerdeserializer-for-dart\"><a href=\"#day81-use-httpsappquicktypeio-to-generate-serializerdeserializer-for-dart\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day81 use <a href=\"https://app.quicktype.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://app.quicktype.io/</a> to generate serializer/deserializer for dart</h2>\n<p>Convert a <code class=\"language-text\">JSON</code> into <code class=\"language-text\">Dart class</code> with <code class=\"language-text\">fromJSON()</code> and <code class=\"language-text\">toJSON()</code> methods easily with  <a href=\"http://quicktype.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">quicktype.io</a> </p>\n<p>Just <strong>paste your JSON</strong> and select <code class=\"language-text\">dart</code> from languages (right-top), you will get the <code class=\"language-text\">dart class</code>.</p>\n<p> try quicktype</p>\n<p><a href=\"app.quicktype.io\">app.quicktype.io</a></p>\n<p>Alternative:</p>\n<p>Or <a href=\"https://javiercbk.github.io/json_to_dart/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">json to dart</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/81quicktype.gif\" alt=\"quicktype\"></p>\n<h2 id=\"day82-loading-pdf\"><a href=\"#day82-loading-pdf\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day82 Loading PDF</h2>\n<p>You can display PDF easily with <code class=\"language-text\">pdf_flutter</code></p>\n<ol>\n<li>\n<p>Add <code class=\"language-text\">pdf_flutter</code> on pubspec.yml</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies:\n  pdf_flutter: ^version</code></pre></div>\n</li>\n<li>\n<p>On <code class=\"language-text\">iOS</code> enable <strong>PDF preview</strong> like by adding this on ios/Runner/info.plist:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;\n&lt;true/&gt;</code></pre></div>\n</li>\n<li>\n<p>Start Using</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Load PDF from Network\nPDF.network(\n    &#39;https://raw.githubusercontent.com/FlutterInThai/Dart-for-Flutter-Sheet-cheet/master/Dart-for-Flutter-Cheat-Sheet.pdf&#39;,\n    height: 500,\n    width: 300,)\n\n//Load PDF from Assets\nPDF.assets(&quot;assets/pdf/demo.pdf&quot;,height:400,width:300)\n\n//Load PDF from file\nFile fileName;\nPDF.file(fileName,height:400,width:300)</code></pre></div>\n</li>\n</ol>\n<p>Visit <a href=\"https://github.com/erluxman/pdf_flutter\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pdf_flutter</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/82pdf_flutter.gif\" alt=\"pdf_flutter\"></p>\n<h2 id=\"day83-flutter-clean\"><a href=\"#day83-flutter-clean\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day83 <code class=\"language-text\">flutter clean</code></h2>\n<p>An obvious but underappreciated tip:</p>\n<p>More than half of the unexpected/strange build errors can be solved by <code class=\"language-text\">flutter clean</code></p>\n<p>The first step towards fixing any build errors in Flutter should be:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">flutter clean </code></pre></div>\n<p><strong><code class=\"language-text\">🤡Remember this command, it will save you hours of frustration</code></strong></p>\n<h2 id=\"day-84-use-alice-plugin-to-inspect-network-requests-like-chuck\"><a href=\"#day-84-use-alice-plugin-to-inspect-network-requests-like-chuck\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day 84 Use <code class=\"language-text\">Alice</code> plugin to inspect network requests like chuck</h2>\n<p>Alice records Http request,payload &#x26; response which can be viewed in simple UI (notification or widget). Alice can work with http:http, dart:io/HttpClient, Chopper &#x26; Dio.</p>\n<h3 id=\"steps\"><a href=\"#steps\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps</h3>\n<ol>\n<li>Add dependency.</li>\n<li>\n<p>Create Alice instance (global is OK)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Alice _alice = Alice(showNotification: true, showInspectorOnShake: true);</code></pre></div>\n</li>\n<li>\n<p>Pass  <code class=\"language-text\">_alice.getNavigatorKey()</code> as NavigatorKey of Material/Cupertino App.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MaterialApp(\n    navigatorKey: _alice.getNavigatorKey(),\n    child:....\n)</code></pre></div>\n</li>\n<li>\n<p>Start logging (using http:http for sample)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import &#39;package:http/http.dart&#39; as http;\n\nhttp\n    .post(&#39;https://jsonplaceholder.typicode.com/posts&#39;, body: body)\n    .interceptWithAlice(_alice, body: body);\n\nhttp\n    .get(&#39;https://jsonplaceholder.typicode.com/posts&#39;)\n    .interceptWithAlice(_alice);\n\nhttp\n    .put(&#39;https://jsonplaceholder.typicode.com/posts/1&#39;, body: body)\n    .then((response) {\n  _alice.onHttpResponse(response, body: body);\n});</code></pre></div>\n</li>\n<li>\n<p>See the HTTP call details<br>\nSimply call <code class=\"language-text\">_alice.showInspector();</code>  </p>\n<p><strong>or</strong></p>\n<p><code class=\"language-text\">Just shake the phone</code></p>\n<p><strong>to</strong></p>\n<p>open the <strong>Http call details</strong> screen.</p>\n</li>\n</ol>\n<p><a href=\"https://pub.dev/packages/alice\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">get alice</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/84inspector.gif\" alt=\"alice\"></p>","timeToRead":4,"frontmatter":{"title":"Flutter Tips 78-84","date":"June 28, 2020","spoiler":"12th batch of 7 tips and tricks on the series 100DaysOfFlutter.","cta":null},"fields":{"slug":"/00014-week-12-100-days-of-flutter/","langKey":"en"}}},"pageContext":{"slug":"/00014-week-12-100-days-of-flutter/","previous":{"fields":{"slug":"/00013-week-11-100-day-of-flutter/","langKey":"en","directoryName":"00013-week-11-100-day-of-flutter"},"frontmatter":{"title":"Flutter Tips 70-77"}},"next":{"fields":{"slug":"/00015-week-13-100-day-flutter/","langKey":"en","directoryName":"00015-week-13-100-day-flutter"},"frontmatter":{"title":"Flutter Tips 85-91"}},"translations":[],"translatedLinks":[]}}}