{"componentChunkName":"component---src-templates-blog-post-js","path":"/00008-week-6-100-days-flutter/","result":{"data":{"site":{"siteMetadata":{"title":"erluxman","author":"Laxman Bhattarai"}},"markdownRemark":{"id":"f7691f4c-f3f6-569f-bc72-d8de5913a34b","html":"<h2 id=\"day36-implicit-interface-of-class\"><a href=\"#day36-implicit-interface-of-class\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day36 Implicit Interface of class</h2>\n<p>Did you know you can extend and implement a class in Dart?</p>\n<ul>\n<li>No need to create <code class=\"language-text\">IInterface</code> to mock a <code class=\"language-text\">class</code>.</li>\n<li>No need to extract <code class=\"language-text\">IInterface</code> as Contract / Protocal</li>\n</ul>\n<p>Every class implicitly defines an interface containing all the instance variables, methods getter and setters.</p>\n<ol>\n<li>extends ->  must override abstract methods, other methods and variables override optional. i.e can inherit parent’s behavior.</li>\n<li>\n<p>implements -> Every methdos and variables must be overriden. i.e. can’t inherit parent behavior</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        Dart has implicit Interface of every class          \n\nclass A {\n    //Optional @override for &#39;extends&#39; &amp;&amp;  must for &#39;implements&#39;. \n    var name;\n    //Optional @override for &#39;extends&#39; &amp;&amp;  must for &#39;implements&#39;.     \n    void normalMethod() =&gt; print(&quot;B -&gt; Normal Method&quot;);\n}\n\nabstract class B{\n    //must @override in both &#39;extends&#39; and &#39;implements&#39;.\n    void abstractMethod();\n}\n\n//Non abstract \nclass C extends A {} // ✅\nclass C implements A {} //❌ Must override name &amp; normalMethod()   \nclass C extends B {} //❌ Needs to override `abstractMethod()`\nclass C implements B {} //❌ Needs to override `abstractMethod()`\n\n//Abstract Child\nabstract class C extends A {}  // ✅\nabstract class C implements A {} // ✅\nabstract class C implements B {} // ✅ \nabstract class C extends B {} // ✅ </code></pre></div>\n</li>\n</ol>\n<h2 id=\"day37-animated-switcher\"><a href=\"#day37-animated-switcher\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day37 Animated Switcher</h2>\n<p>Use <code class=\"language-text\">Animated Switcher</code> for smooth transition when a widget is switched with another.</p>\n<p><strong>Provide:</strong></p>\n<ol>\n<li><code class=\"language-text\">duration</code> of transition</li>\n<li>dynamic <code class=\"language-text\">child</code> &#x26;</li>\n<li><code class=\"language-text\">TransitionBuilder</code> like <code class=\"language-text\">Fade,Scale,Rotation</code></li>\n</ol>\n<p>Then, Flutter will handle the rest.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    AnimatedSwitcher(\n        \n        duration: Duration(milliseconds: 800),\n\n        child: shouldShowCard ? CreditCardFront() : CreditCardBack(),\n\n        transitionBuilder: (child, animation) {\n            print(&quot;Animation asked ${widget.runtimeType}&quot;);\n            return FadeTransition(\n                child: child,\n                opacity: animation,\n            );\n        },\n      )</code></pre></div>\n<p><a href=\"https://codepen.io/erluxman/pen/xxwJRBQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try in codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/37animatedswitcher.gif\" alt=\"animatedswitcher\"></p>\n<h2 id=\"day38-gesturedetector-widget\"><a href=\"#day38-gesturedetector-widget\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day38 GestureDetector widget</h2>\n<p>Use Gesture Detector to detect gestures like tap, double Tap, press, LongPress, pan, drag, zoom etc.</p>\n<p>All those callbacks behave like <code class=\"language-text\">onClick(){}</code> on Button.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GestureDetector(\n    onTap: //Tapped\n    onDoubleTap: //&quot;Double Tapped\n    onLongPress: //Long Press\n    onLongPressEnd: //Long Press ends\n    onPanStart: // Pan Started\n    onPanUpdate: //&quot;Pan&quot; + paninfo.delta\n    onPanEnd: //Pan Ended\n    onHorizontalDragStart: //&quot;Drag&quot; + draginfo\n    child: Padding(\n        padding: const EdgeInsets.all(48.0),\n        child: InkWell(\n        child: Card(\n            child: Center(\n                child: Text(\n                currentGesture.toUpperCase(),\n                style: TextStyle(fontSize: 20, \n                    fontWeight: FontWeight.w700),\n                ),\n            ),\n        ),\n        ),\n    ),\n);</code></pre></div>\n<p><a href=\"https://codepen.io/erluxman/pen/wvKxVrE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try on codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/38gesture.gif\" alt=\"gesture\"></p>\n<h2 id=\"day39-package-animated-text-kit\"><a href=\"#day39-package-animated-text-kit\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day39 Package Animated Text Kit</h2>\n<p>animated<em>text</em>kit provides some cool ways to animate text appearences.</p>\n<ol>\n<li>\n<p>Use built in Widget like</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RotateAnimatedTextKit(), TextLiquidFill(), ColorizeAnimatedTextKit() etc.</code></pre></div>\n</li>\n<li>\n<p>&#x26; Pass a list of text in constructor</p>\n<p>   TyperAnimatedTextKit(\ntext: [“Colorize”,“Animated”, “TextKit”,])</p>\n</li>\n<li>Do additional customization if you want. To do that Look into constructor of each Widgets provided.</li>\n</ol>\n<p><a href=\"https://gist.github.com/erluxman/821568539592f9ac798172dfffa14540\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sample code</a></p>\n<p><a href=\"https://pub.dev/packages/animated_text_kit#-installing-tab-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">animated<em>text</em>kit package</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/39animatetext.gif\" alt=\"animatedtext\"></p>\n<h2 id=\"day40--5-steps-of-animatedicon\"><a href=\"#day40--5-steps-of-animatedicon\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day40  5 Steps of AnimatedIcon</h2>\n<p>We can use AnimatedIcon in 5 simple steps.</p>\n<ol>\n<li>Define a Stateful Widget whose state mixins with SingleTickerProviderStateMixin.</li>\n<li>Define an AnimationController inside state with animation duration and pass this into vsync.</li>\n<li>Define a variable that stores wheather animation is at start or end.</li>\n<li>Provide the controller  to AnimatedIcon.</li>\n<li>Animate  icon by calling <code class=\"language-text\">.forward()</code> or <code class=\"language-text\">.reverse()</code> on AnimationController based on the current state of icon.</li>\n</ol>\n<p><a href=\"https://codepen.io/erluxman/pen/PoPyNrM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">play on codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/40animatedicon.gif\" alt=\"animatedicon\"></p>\n<h2 id=\"day41-path-provider-path_provider-package-common-file-locations-in-ios-and-android\"><a href=\"#day41-path-provider-path_provider-package-common-file-locations-in-ios-and-android\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day41 Path Provider( <code class=\"language-text\">path_provider package</code>) (common file locations in iOS and Android)</h2>\n<p>Sometimes we want to get the location of Various common directories like:</p>\n<h3 id=\"download-cache-documents-external-storage-external-cache-etc\"><a href=\"#download-cache-documents-external-storage-external-cache-etc\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Download, Cache, Documents, External Storage, External Cache etc</h3>\n<p>The package <code class=\"language-text\">path_provider</code> is build for exact same reason so that we do not have to deal with Platform specific issues by our own.</p>\n<ol>\n<li>Add path<em>provider to pubspect.\n`path</em>provider: ^verison`</li>\n<li>\n<p>Use it</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Gives download directory\nDirectory tempDir = await getTemporaryDirectory();\n\n//Gives documents directory\nDirectory docDir = await getApplicationDocumentsDirectory();\n\n//Gives external Storages\nList&lt;Directory&gt; externalStorages = await getExternalStorageDirectories();\n\n//Gives download directory\nDirectory downloadDir = await getDownloadsDirectory();</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://pub.dev/packages/path_provider#-readme-tab-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Download <code class=\"language-text\">path_provider</code></a></p>\n<h2 id=\"day42-flutter-shapeborder\"><a href=\"#day42-flutter-shapeborder\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#Day42 Flutter ShapeBorder</h2>\n<p>We can use ShapeBorder to give outline to widgets or Clip them on it’s shape. There are my ShapeBorder like <code class=\"language-text\">Border, ContinuousRectangleBorder, StadiumBorder, CircleBorder, BeveledRectangleBorder</code> etc.</p>\n<ol>\n<li>\n<p>Use ShapeBorder to give a Widget outline.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Container(\n    decoration: ShapeDecoration(\n        color: Colors.white,\n        shape: // Any shape border\n    ),\n)</code></pre></div>\n</li>\n<li>\n<p>Use ShapeBorder to clip a Widget.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ClipPath(\n    clipper: ShapeBorderClipper(\n        shape: // Any shape border\n    ),\n    child: // Any Child to be clipped\n)</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://codepen.io/erluxman/pen/vYNQLPx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try in codepen</a></p>\n<p><img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/41shapeborder1.png\" alt=\"shapeborder\">\n<img src=\"https://raw.githubusercontent.com/erluxman/awesomefluttertips/master/assets/41shapeborder2.png\" alt=\"shapeborder\"></p>","timeToRead":4,"frontmatter":{"title":"Flutter Tips 36-42","date":"May 18, 2020","spoiler":"Sixth batch of 7 tips and tricks on the series 100DaysOfFlutter.","cta":null},"fields":{"slug":"/00008-week-6-100-days-flutter/","langKey":"en"}}},"pageContext":{"slug":"/00008-week-6-100-days-flutter/","previous":{"fields":{"slug":"/00007-week-5-100-days-of-flutter/","langKey":"en","directoryName":"00007-week-5-100-days-of-flutter"},"frontmatter":{"title":"Flutter Tips 29-35"}},"next":{"fields":{"slug":"/00009-week-7-100-days-of-flutter/","langKey":"en","directoryName":"00009-week-7-100-days-of-flutter"},"frontmatter":{"title":"Flutter Tips 43-49"}},"translations":[],"translatedLinks":[]}}}